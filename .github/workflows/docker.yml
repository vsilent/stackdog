name: Docker CICD

on:
  push:
    branches:
      - master
      - testing
  pull_request:
    branches:
      - master

jobs:
  cicd-linux-docker:
    name: Cargo and npm build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: docker-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-registry-
            docker-

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: docker-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-index-
            docker-

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: docker-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-build-
            docker-

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Build frontend
        working-directory: ./web
        run: docker build . --file Dockerfile --tag web

      - name: Compile js
        working-directory: ./web
        run: docker run --rm -v $GITHUB_WORKSPACE/dist:/stackgog/dist web sh -c "npm run build"

#      - name: npm install
#        working-directory: ./web
#        run: npm install
#
#      - name: Build
#        working-directory: ./web
#        run: npm run build

#      - name: Test
#        working-directory: ./web
#        run: npm test

#      - name: Get npm cache directory
#        working-directory: ./web
#        id: npm-cache-dir
#        run: |
#          echo "::set-output name=dir::$(npm config get cache)"
#      - uses: actions/cache@v2
#        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
#        with:
#          path: ${{ steps.npm-cache-dir.outputs.dir }}
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-

      - name: Copy app files and zip
        run: |
          mkdir app
          cp target/release/stackdog app/stackdog
          cp -a $GITHUB_WORKSPACE/dist/. app/stackdog/dist
          cp docker/prod/Dockerfile app/Dockerfile
          cd app
          touch .env
          tar -czvf ../app.tar.gz .
          cd ..

      - name: Upload app archive for Docker job
        uses: actions/upload-artifact@v1
        with:
          name: artifact-linux-docker
          path: app.tar.gz

  cicd-docker:
    name: CICD Docker
    runs-on: ubuntu-latest
    needs: cicd-linux-docker
    steps:
      - name: Download app archive
        uses: actions/download-artifact@v2
        with:
          name: artifact-linux-docker

      - name: Extract app archive
        run: tar -zxvf app.tar.gz

      - name: Docker build and publish
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: trydirect/stackdog
          add_git_labels: true
          tag_with_ref: true
          #no-cache: true
          context:  ./app