name: Docker CICD

on:
  push:
    branches:
      - master
      - testing
  pull_request:
    branches:
      - master

jobs:
  cicd-linux-docker:
    name: Cargo and npm build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          key: docker-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-registry-
            docker-

      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          key: docker-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-index-
            docker-

      - name: Cache cargo build
        uses: actions/cache@v2.1.4
        with:
          path: target
          key: docker-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-build-
            docker-

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      #      Build with Docker
      #      - name: Build frontend
      #        working-directory: ./web
      #        run: docker build . --file Dockerfile --tag web
      #
      #      - name: Compile js
      #        working-directory: ./web
      #        run: docker run --rm -v $GITHUB_WORKSPACE/dist:/stackdog/dist web sh -c "npm run build"
      #
      #      - name: Display structure of dist
      #        run: ls -R $GITHUB_WORKSPACE/dist

      - name: npm install, build, and test
        working-directory: ./web
        run: |
          npm install
          npm run build
      #   npm test

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-without-markdown
          path: |
            web/dist
            !web/dist/**/*.md

#      - name: Archive code coverage results
#        uses: actions/upload-artifact@v2
#        with:
#          name: code-coverage-report
#          path: output/test/code-coverage.html
      - name: Display structure of downloaded files
        run: ls -R web/dist

      - name: Copy app files and zip
        run: |
          mkdir -p app/stackdog/dist
          cp target/release/stackdog app/stackdog
          cp -a web/dist/. app/stackdog
          cp docker/prod/Dockerfile app/Dockerfile
          cd app
          touch .env
          tar -czvf ../app.tar.gz .
          cd ..

      - name: Upload app archive for Docker job
        uses: actions/upload-artifact@v2.2.2
        with:
          name: artifact-linux-docker
          path: app.tar.gz

  cicd-docker:
    name: CICD Docker
    runs-on: ubuntu-latest
    needs: cicd-linux-docker
    steps:
      - name: Download app archive
        uses: actions/download-artifact@v2
        with:
          name: artifact-linux-docker

      - name: Extract app archive
        run: tar -zxvf app.tar.gz

      - name: Display structure of downloaded files
        run: ls -R

      - name: Docker build and publish
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: trydirect/stackdog
          add_git_labels: true
          tag_with_ref: true
          #no-cache: true